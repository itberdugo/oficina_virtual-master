{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/layout.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/layout.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/layout.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;;;;uCACe,CAAA,GAAA,+PAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkQ,GAC/R,gCACA"}},
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/DefaultLoged.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/DefaultLoged.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/DefaultLoged.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;;;;uCACe,CAAA,GAAA,+PAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+Q,GAC5S,6CACA"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/main/Aliansalud.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/main/Aliansalud.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/main/Aliansalud.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;;;;uCACe,CAAA,GAAA,+PAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkR,GAC/S,gDACA"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/main/neps.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/main/neps.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/main/neps.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;;;;uCACe,CAAA,GAAA,+PAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4Q,GACzS,0CACA"}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/main/page.tsx"],"sourcesContent":["import DefaultLoged from \"@/components/DefaultLoged\";\nimport Aliansalud from \"@/components/main/Aliansalud\";\nimport Neps from \"@/components/main/neps\";\nimport { Session, getServerSession } from \"next-auth\"\nimport { redirect } from \"next/navigation\"\n\n\nexport default async function Main() {\n\n  const contratos_Actuales = ['aliansalud', 'nueva eps'];\n\n    const session = await getServerSession()  as Session ;\n\n    if(!session || !session.user){\n        redirect(\"/\");\n    }\n\n    //validar que el usuario tenga una imagen \n\n    if(!session.user.image || !contratos_Actuales.includes(session.user.image)){\n        return <DefaultLoged nombre={session.user.name as string} />\n    }\n\n\n\n  return (\n    <main className=\"w-full flex flex-col gap-5 justify-center items-center\">\n\n\n      pruebasdasd\n        {session.user.image === 'aliansalud'  && <Aliansalud nombre={session.user.name as string}  documento={session.user.email as string} />}\n        {session.user.image === 'nueva eps'  && <Neps nombre={session.user.name as string}  documento={session.user.email as string} />}\n    \n    \n    </main>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAOe,eAAe;IAE5B,MAAM,qBAAqB;QAAC;QAAc;KAAY;IAEpD,MAAM,UAAU,MAAM,CAAA,GAAA,qIAAA,CAAA,mBAAgB,AAAD;IAErC,IAAG,CAAC,WAAW,CAAC,QAAQ,IAAI,EAAC;QACzB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACb;IAEA,0CAA0C;IAE1C,IAAG,CAAC,QAAQ,IAAI,CAAC,KAAK,IAAI,CAAC,mBAAmB,QAAQ,CAAC,QAAQ,IAAI,CAAC,KAAK,GAAE;QACvE,qBAAO,wPAAC,kIAAA,CAAA,UAAY;YAAC,QAAQ,QAAQ,IAAI,CAAC,IAAI;;;;;;IAClD;IAIF,qBACE,wPAAC;QAAK,WAAU;;YAAyD;YAIpE,QAAQ,IAAI,CAAC,KAAK,KAAK,8BAAiB,wPAAC,wIAAA,CAAA,UAAU;gBAAC,QAAQ,QAAQ,IAAI,CAAC,IAAI;gBAAa,WAAW,QAAQ,IAAI,CAAC,KAAK;;;;;;YACvH,QAAQ,IAAI,CAAC,KAAK,KAAK,6BAAgB,wPAAC,kIAAA,CAAA,UAAI;gBAAC,QAAQ,QAAQ,IAAI,CAAC,IAAI;gBAAa,WAAW,QAAQ,IAAI,CAAC,KAAK;;;;;;;;;;;;AAKzH"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/favicon.ico.mjs (structured image object)"],"sourcesContent":["import src from \"IMAGE\";\nexport default { src, width: 256, height: 256 }\n"],"names":[],"mappings":";;;;;;uCACe;IAAE,KAAA,kHAAA,CAAA,UAAG;IAAE,OAAO;IAAK,QAAQ;AAAI"}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/utils/helpers.ts"],"sourcesContent":["'use server'\nimport crypto from 'crypto';\n\nconst SCP = process.env.PASSWORD_ENCRYPT_KEY as string;\n\nexport async function GenerateCode() {\n    return Math.floor(100000 + Math.random() * 900000).toString();\n}\n\nexport async function encryptALONE(text:string, secretKey:string) {\n    const iv = crypto.randomBytes(16); // Vector de inicialización aleatorio\n    const cipher = crypto.createCipheriv('aes-256-cbc', Buffer.from(secretKey, 'hex'), iv);\n    let encrypted = cipher.update(text, 'utf-8', 'hex');\n    encrypted += cipher.final('hex');\n    return iv.toString('hex') + encrypted;\n}\n\n//funcion para encriptar una contraseña \n\nexport async function encrypt(text:string, secretKey:string = SCP) {\n\n    const iv = crypto.randomBytes(16); // Vector de inicialización aleatorio\n    const cipher = crypto.createCipheriv('aes-256-cbc', Buffer.from(secretKey, 'hex'), iv);\n    let encrypted = cipher.update(text, 'utf-8', 'hex');\n    encrypted += cipher.final('hex');\n    return iv.toString('hex') + encrypted;\n  }\n\nexport async function decrypt(encryptedText:string, secretKey:string) {\n    const iv = Buffer.from(encryptedText.slice(0, 32), 'hex'); // Extraer el IV del texto cifrado\n    const encryptedData = encryptedText.slice(32); // Datos cifrados sin el IV\n    const decipher = crypto.createDecipheriv('aes-256-cbc', Buffer.from(secretKey, 'hex'), iv);\n    let decrypted = decipher.update(encryptedData, 'hex', 'utf-8');\n    decrypted += decipher.final('utf-8');\n    return decrypted;\n}"],"names":[],"mappings":";;;;;;;;;;;;;;AAGA,MAAM,MAAM,QAAQ,GAAG,CAAC,oBAAoB;AAErC,eAAe;IAClB,OAAO,KAAK,KAAK,CAAC,SAAS,KAAK,MAAM,KAAK,QAAQ,QAAQ;AAC/D;AAEO,eAAe,aAAa,IAAW,EAAE,SAAgB;IAC5D,MAAM,KAAK,yCAAA,CAAA,UAAM,CAAC,WAAW,CAAC,KAAK,qCAAqC;IACxE,MAAM,SAAS,yCAAA,CAAA,UAAM,CAAC,cAAc,CAAC,eAAe,OAAO,IAAI,CAAC,WAAW,QAAQ;IACnF,IAAI,YAAY,OAAO,MAAM,CAAC,MAAM,SAAS;IAC7C,aAAa,OAAO,KAAK,CAAC;IAC1B,OAAO,GAAG,QAAQ,CAAC,SAAS;AAChC;AAIO,eAAe,QAAQ,IAAW,EAAE,YAAmB,GAAG;IAE7D,MAAM,KAAK,yCAAA,CAAA,UAAM,CAAC,WAAW,CAAC,KAAK,qCAAqC;IACxE,MAAM,SAAS,yCAAA,CAAA,UAAM,CAAC,cAAc,CAAC,eAAe,OAAO,IAAI,CAAC,WAAW,QAAQ;IACnF,IAAI,YAAY,OAAO,MAAM,CAAC,MAAM,SAAS;IAC7C,aAAa,OAAO,KAAK,CAAC;IAC1B,OAAO,GAAG,QAAQ,CAAC,SAAS;AAC9B;AAEK,eAAe,QAAQ,aAAoB,EAAE,SAAgB;IAChE,MAAM,KAAK,OAAO,IAAI,CAAC,cAAc,KAAK,CAAC,GAAG,KAAK,QAAQ,kCAAkC;IAC7F,MAAM,gBAAgB,cAAc,KAAK,CAAC,KAAK,2BAA2B;IAC1E,MAAM,WAAW,yCAAA,CAAA,UAAM,CAAC,gBAAgB,CAAC,eAAe,OAAO,IAAI,CAAC,WAAW,QAAQ;IACvF,IAAI,YAAY,SAAS,MAAM,CAAC,eAAe,OAAO;IACtD,aAAa,SAAS,KAAK,CAAC;IAC5B,OAAO;AACX"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/utils/helpers_client.ts"],"sourcesContent":["import crypto from 'crypto'\n\n\nexport function unifiedName(primer_nombre:string, segundo_nombre:string, primer_apellido:string, segundo_apellido:string){\n\n\n    return (primer_nombre + ' ') + (segundo_nombre ? segundo_nombre + ' ' : '') + (primer_apellido ? primer_apellido + ' ' : '') + (segundo_apellido ? segundo_apellido : '')\n}\nexport function generarContrasena() {\n  const simbolos = '!@#$%^&*()_+~`|}{[]:;?><,./-=';\n  const numeros = '0123456789';\n  const mayusculas = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n  let contrasena = '';\n  contrasena += simbolos[crypto.randomInt(simbolos.length)];\n  contrasena += numeros[crypto.randomInt(numeros.length)] + numeros[crypto.randomInt(numeros.length)];\n  contrasena += mayusculas[crypto.randomInt(mayusculas.length)];\n\n  while (contrasena.length < 8) {\n    const chars = simbolos + numeros + mayusculas;\n    contrasena += chars[crypto.randomInt(chars.length)];\n  }\n\n  // Mezclar los caracteres\n  contrasena = contrasena.split('').sort(() => 0.5 - Math.random()).join('');\n\n  return contrasena;\n}\nexport function ValidateEmail(mail:string) {\n  const re = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$/i\n  return re.test(mail);\n}\n\nexport function ValidateSecurityPassword(password:string){\n  const mensajesError = [];\n\n  // Verificar longitud mínima de 8 caracteres\n  if (password.length < 8) {\n      mensajesError.push(\"La contraseña debe tener al menos 8 caracteres.\");\n  }\n\n  // Verificar al menos un símbolo\n  if (!/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\n      mensajesError.push(\"La contraseña debe tener al menos un símbolo.\");\n  }\n\n  // Verificar al menos dos números\n  if ((password.match(/\\d/g) || []).length < 2) {\n      mensajesError.push(\"La contraseña debe tener al menos dos números.\");\n  }\n\n  // Verificar al menos una mayúscula\n  if (!/[A-Z]/.test(password)) {\n      mensajesError.push(\"La contraseña debe tener al menos una letra mayúscula.\");\n  }\n\n  return mensajesError;\n}\n\n"],"names":[],"mappings":";;;;;;;;;AAGO,SAAS,YAAY,aAAoB,EAAE,cAAqB,EAAE,eAAsB,EAAE,gBAAuB;IAGpH,OAAO,AAAC,gBAAgB,MAAO,CAAC,iBAAiB,iBAAiB,MAAM,EAAE,IAAI,CAAC,kBAAkB,kBAAkB,MAAM,EAAE,IAAI,CAAC,mBAAmB,mBAAmB,EAAE;AAC5K;AACO,SAAS;IACd,MAAM,WAAW;IACjB,MAAM,UAAU;IAChB,MAAM,aAAa;IAEnB,IAAI,aAAa;IACjB,cAAc,QAAQ,CAAC,yCAAA,CAAA,UAAM,CAAC,SAAS,CAAC,SAAS,MAAM,EAAE;IACzD,cAAc,OAAO,CAAC,yCAAA,CAAA,UAAM,CAAC,SAAS,CAAC,QAAQ,MAAM,EAAE,GAAG,OAAO,CAAC,yCAAA,CAAA,UAAM,CAAC,SAAS,CAAC,QAAQ,MAAM,EAAE;IACnG,cAAc,UAAU,CAAC,yCAAA,CAAA,UAAM,CAAC,SAAS,CAAC,WAAW,MAAM,EAAE;IAE7D,MAAO,WAAW,MAAM,GAAG,EAAG;QAC5B,MAAM,QAAQ,WAAW,UAAU;QACnC,cAAc,KAAK,CAAC,yCAAA,CAAA,UAAM,CAAC,SAAS,CAAC,MAAM,MAAM,EAAE;IACrD;IAEA,yBAAyB;IACzB,aAAa,WAAW,KAAK,CAAC,IAAI,IAAI,CAAC,IAAM,MAAM,KAAK,MAAM,IAAI,IAAI,CAAC;IAEvE,OAAO;AACT;AACO,SAAS,cAAc,IAAW;IACvC,MAAM,KAAK;IACX,OAAO,GAAG,IAAI,CAAC;AACjB;AAEO,SAAS,yBAAyB,QAAe;IACtD,MAAM,gBAAgB,EAAE;IAExB,4CAA4C;IAC5C,IAAI,SAAS,MAAM,GAAG,GAAG;QACrB,cAAc,IAAI,CAAC;IACvB;IAEA,gCAAgC;IAChC,IAAI,CAAC,yBAAyB,IAAI,CAAC,WAAW;QAC1C,cAAc,IAAI,CAAC;IACvB;IAEA,iCAAiC;IACjC,IAAI,CAAC,SAAS,KAAK,CAAC,UAAU,EAAE,EAAE,MAAM,GAAG,GAAG;QAC1C,cAAc,IAAI,CAAC;IACvB;IAEA,mCAAmC;IACnC,IAAI,CAAC,QAAQ,IAAI,CAAC,WAAW;QACzB,cAAc,IAAI,CAAC;IACvB;IAEA,OAAO;AACT"}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/utils/mail.ts"],"sourcesContent":["'use server'\nimport nodeMailer from 'nodemailer'\n\n\nexport async function sendMail(to: string, subject: string, text: string){\n\n    try{\n        const transporter = nodeMailer.createTransport({\n            host: \"smtp-mail.outlook.com\",\n            port: 587,\n            secure: false,\n            auth: {\n                user: process.env.EMAIL_USER,\n                pass: process.env.EMAIL_PASS\n            }\n        })\n\n        await transporter.sendMail({\n            from: process.env.EMAIL_USER,\n            to,\n            subject,\n            text\n        })\n\n        return true\n    }\n    \n        catch(e){\n            console.log(e)\n            return false\n        }\n}\n\n\n\n"],"names":[],"mappings":";;;;;;;;;;;AAIO,eAAe,SAAS,EAAU,EAAE,OAAe,EAAE,IAAY;IAEpE,IAAG;QACC,MAAM,cAAc,+IAAA,CAAA,UAAU,CAAC,eAAe,CAAC;YAC3C,MAAM;YACN,MAAM;YACN,QAAQ;YACR,MAAM;gBACF,MAAM,QAAQ,GAAG,CAAC,UAAU;gBAC5B,MAAM,QAAQ,GAAG,CAAC,UAAU;YAChC;QACJ;QAEA,MAAM,YAAY,QAAQ,CAAC;YACvB,MAAM,QAAQ,GAAG,CAAC,UAAU;YAC5B;YACA;YACA;QACJ;QAEA,OAAO;IACX,EAEI,OAAM,GAAE;QACJ,QAAQ,GAAG,CAAC;QACZ,OAAO;IACX;AACR"}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/utils/mongo.ts"],"sourcesContent":["'use server'\nimport { PatientDataMongo } from \"@/types\"\nimport { MongoClient } from \"mongodb\"\nimport { decrypt, encrypt } from \"./helpers\"\n\nexport async function InsertTempCode(documento: string,email:string, code: string) {\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n\n        \n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('mfa')\n        //se elimina el documento si ya existe\n\n        await collection.deleteMany({documento})\n\n        await collection.insertOne({ documento, code , email,createAt: new Date()})\n        return  true\n    }\n\n    catch(e){\n        console.log(e)\n        return false\n\n    }\n    \n    finally{\n            await client.close()\n        }\n}\nexport async function GetTempCode(documento: string){\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('mfa')\n\n        const res = await collection.findOne({documento},{projection: {_id: 0}}) \n\n        return res ? res as unknown as  {documento: string, code: string, email: string, createAt: Date}\n         : null\n\n    }\n\n    catch(e){\n        console.log(e)\n        return null\n    }\n\n    finally{\n        await client.close()\n    }\n}\nexport async function saveUserDB(data:PatientDataMongo){\n\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('usuarios')\n\n        await collection.insertOne({...data, password: await encrypt(data.password, process.env.PASSWORD_ENCRYPT_KEY|| '')})\n\n        return true\n    }\n\n    catch(e){\n        console.log(e)\n        return false\n    }\n\n    finally{\n        await client.close()\n    }\n\n}\nexport async function getUserExists(documento: string){\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('usuarios')\n\n        const res = await collection.findOne({documento: Number(documento)},{projection: {_id: 0}})\n\n        return res ? true : false\n    }\n\n    catch(e){\n        console.log(e)\n        return true\n    }\n\n    finally{\n        await client.close()\n    }\n}\nexport async function getMailExists(email: string){\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('usuarios')\n        const res = await collection.findOne({correo:email},{projection: {_id: 0}})\n\n        return res ? true : false\n    }\n\n    catch(e){\n        console.log(e)\n        return true\n    }\n\n    finally{\n        await client.close()\n    }\n}\nexport async function LoginUserDB(documento:string,password:string){\n\n\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('usuarios')\n        const projection = {projection: {_id: 0, primer_nombre:1, segundo_nombre:1, primer_apellido:1, \n            segundo_apellido:1, correo:1, documento:1,eps:1,password:1}}\n            const res = await collection.findOne({documento:Number(documento)},projection)\n            console.log('resultado:', res);\n        if(!res) return null\n\n        const decrypted = await decrypt(res.password, process.env.PASSWORD_ENCRYPT_KEY || '')\n\n        console.log('decrypted:', decrypted);\n        if(decrypted !== password) return null\n\n        return res as unknown as PatientDataMongo\n        \n    }\n\n    catch(e){\n        console.log(e)\n        return null\n    }\n\n    finally{\n        await client.close()\n    }\n\n}\nexport async function getDocumentoByEmail(email:string){\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('usuarios')\n        const res = await collection.findOne({correo:email},{projection: {_id: 0, documento: 1}})\n\n        return res ? res.documento as Number : null\n    }\n\n    catch(e){\n        console.log(e)\n        return null\n    }\n\n    finally{\n        await client.close()\n    }\n}\nexport async function getMailByDocumento(documento:string){\n\n\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('usuarios')\n        const res = await collection.findOne({documento:Number(documento)},{projection: {_id: 0, correo: 1}})\n        return res ? res.correo as string : null\n    }\n\n    catch(e){\n        console.log(e)\n        return null\n    }\n\n    finally{\n        await client.close()\n    }\n\n}\nexport async function SetNewPassword(documento: string, password: string){\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('usuarios')\n\n        await collection.updateOne({documento: Number(documento)},{$set: {password: await encrypt(password, process.env.PASSWORD_ENCRYPT_KEY || '')}})\n\n        return true\n    }\n\n    catch(e){\n        console.log(e)\n        return false\n    }\n\n    finally{\n        await client.close()\n    }\n}\nexport async function getUserRegisterByMail(email:string){\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('usuarios')\n        const res = await collection.findOne({correo:email},{projection: {_id: 0,iat:0,password:0}})\n\n        return res ? res as unknown as PatientDataMongo : null\n    }\n\n    catch(e){\n        console.log(e)\n        return null\n    }\n\n    finally{\n        await client.close()\n    }\n}\nexport async function getUserRegisterByDocumento(documento:string){\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('usuarios')\n        const res = await collection.findOne({documento:Number(documento)},{projection: {_id: 0,iat:0,password:0}})\n\n        return res ? res as unknown as PatientDataMongo : null\n    }\n\n    catch(e){\n        console.log(e)\n        return null\n    }\n\n    finally{\n        await client.close()\n    }\n}\nexport async function setNewPasswordByDocumento(documento:string,password:string){\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('usuarios')\n\n        await collection.updateOne({documento:Number(documento)},{$set: {password: await encrypt(password, process.env.PASSWORD_ENCRYPT_KEY || '')}})\n\n        return true\n    }\n\n    catch(e){\n        console.log(e)\n        return false\n    }\n\n    finally{\n        await client.close()\n    }\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 683, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 688, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/server/login.ts [app-client] (ecmascript, action)"],"sourcesContent":["'use server'\nimport { GenerateCode, decrypt } from \"@/utils/helpers\"\nimport { generarContrasena } from \"@/utils/helpers_client\"\nimport { sendMail } from \"@/utils/mail\"\nimport { GetTempCode, InsertTempCode, LoginUserDB, SetNewPassword, getMailByDocumento } from \"@/utils/mongo\"\n\nexport async function GenerateAndSendCode( documento: string, mail:string){\n    const code = await GenerateCode()\n\n    const res = await InsertTempCode(documento, mail, code)\n\n    if(!res) return false\n\n    const res2 = await sendMail(mail, 'Codigo de Verificación', `Su codigo de verificación para la creación de su usuario en la plataforma de Hestia oficina virtual es: ${code}`)\n\n    if(!res2) return false\n\n    return true\n\n}\n\nexport async function ValidateCodeDB(documento: string, code: string){\n\n    const res = await GetTempCode(documento)\n\n    if(!res) return {\n        status: false,\n        message: 'El tiempo para ingresar el código ha expirado, intente nuevamente'\n    }\n\n    if(res.code !== code) return {\n        status: false,\n        message: 'El código no es válido'\n    }\n\n    return {\n        status: true,\n        message: 'Código válido'\n    }\n}\n\nexport async function ValidateCredentialsDB(username: string, password: string){\n\n    const decrypted = await decrypt(password, process.env.PASSWORD_ENCRYPT_KEY || '')\n\n    const user = await LoginUserDB(username, decrypted)\n\n\n    if(!user) return {\n        status: false,\n        message: 'Usuario o contraseña incorrectos'\n    }\n\n    return {\n        status: true,\n        message: 'Credenciales válidas'\n    }\n}\n\nexport async function ResetRandomPassword(documento: string){\n\n    const newPassword = generarContrasena()\n\n    const res = await SetNewPassword(documento, newPassword)\n\n    const mail = await getMailByDocumento(documento)\n\n    if(!mail) return false\n\n    const res2 = await sendMail(mail, 'Nueva Contraseña Temporal Plataforma Hestia', `Su nueva contraseña para la plataforma de Hestia oficina virtual es: ${newPassword}`)\n\n    return res2\n}\n\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAMO,eAAe,oBAAqB,SAAiB,EAAE,IAAW;IACrE,MAAM,OAAO,MAAM,CAAA,GAAA,uHAAA,CAAA,eAAY,AAAD;IAE9B,MAAM,MAAM,MAAM,CAAA,GAAA,qHAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,MAAM;IAElD,IAAG,CAAC,KAAK,OAAO;IAEhB,MAAM,OAAO,MAAM,CAAA,GAAA,oHAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,0BAA0B,CAAC,wGAAwG,EAAE,KAAK,CAAC;IAE7K,IAAG,CAAC,MAAM,OAAO;IAEjB,OAAO;AAEX;AAEO,eAAe,eAAe,SAAiB,EAAE,IAAY;IAEhE,MAAM,MAAM,MAAM,CAAA,GAAA,qHAAA,CAAA,cAAW,AAAD,EAAE;IAE9B,IAAG,CAAC,KAAK,OAAO;QACZ,QAAQ;QACR,SAAS;IACb;IAEA,IAAG,IAAI,IAAI,KAAK,MAAM,OAAO;QACzB,QAAQ;QACR,SAAS;IACb;IAEA,OAAO;QACH,QAAQ;QACR,SAAS;IACb;AACJ;AAEO,eAAe,sBAAsB,QAAgB,EAAE,QAAgB;IAE1E,MAAM,YAAY,MAAM,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD,EAAE,UAAU,QAAQ,GAAG,CAAC,oBAAoB,IAAI;IAE9E,MAAM,OAAO,MAAM,CAAA,GAAA,qHAAA,CAAA,cAAW,AAAD,EAAE,UAAU;IAGzC,IAAG,CAAC,MAAM,OAAO;QACb,QAAQ;QACR,SAAS;IACb;IAEA,OAAO;QACH,QAAQ;QACR,SAAS;IACb;AACJ;AAEO,eAAe,oBAAoB,SAAiB;IAEvD,MAAM,cAAc,CAAA,GAAA,8HAAA,CAAA,oBAAiB,AAAD;IAEpC,MAAM,MAAM,MAAM,CAAA,GAAA,qHAAA,CAAA,iBAAc,AAAD,EAAE,WAAW;IAE5C,MAAM,OAAO,MAAM,CAAA,GAAA,qHAAA,CAAA,qBAAkB,AAAD,EAAE;IAEtC,IAAG,CAAC,MAAM,OAAO;IAEjB,MAAM,OAAO,MAAM,CAAA,GAAA,oHAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,+CAA+C,CAAC,qEAAqE,EAAE,YAAY,CAAC;IAEtK,OAAO;AACX"}},
    {"offset": {"line": 762, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 767, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/utils/mongo.ts [app-client] (ecmascript, action)"],"sourcesContent":["'use server'\nimport { PatientDataMongo } from \"@/types\"\nimport { MongoClient } from \"mongodb\"\nimport { decrypt, encrypt } from \"./helpers\"\n\nexport async function InsertTempCode(documento: string,email:string, code: string) {\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n\n        \n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('mfa')\n        //se elimina el documento si ya existe\n\n        await collection.deleteMany({documento})\n\n        await collection.insertOne({ documento, code , email,createAt: new Date()})\n        return  true\n    }\n\n    catch(e){\n        console.log(e)\n        return false\n\n    }\n    \n    finally{\n            await client.close()\n        }\n}\nexport async function GetTempCode(documento: string){\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('mfa')\n\n        const res = await collection.findOne({documento},{projection: {_id: 0}}) \n\n        return res ? res as unknown as  {documento: string, code: string, email: string, createAt: Date}\n         : null\n\n    }\n\n    catch(e){\n        console.log(e)\n        return null\n    }\n\n    finally{\n        await client.close()\n    }\n}\nexport async function saveUserDB(data:PatientDataMongo){\n\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('usuarios')\n\n        await collection.insertOne({...data, password: await encrypt(data.password, process.env.PASSWORD_ENCRYPT_KEY|| '')})\n\n        return true\n    }\n\n    catch(e){\n        console.log(e)\n        return false\n    }\n\n    finally{\n        await client.close()\n    }\n\n}\nexport async function getUserExists(documento: string){\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('usuarios')\n\n        const res = await collection.findOne({documento: Number(documento)},{projection: {_id: 0}})\n\n        return res ? true : false\n    }\n\n    catch(e){\n        console.log(e)\n        return true\n    }\n\n    finally{\n        await client.close()\n    }\n}\nexport async function getMailExists(email: string){\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('usuarios')\n        const res = await collection.findOne({correo:email},{projection: {_id: 0}})\n\n        return res ? true : false\n    }\n\n    catch(e){\n        console.log(e)\n        return true\n    }\n\n    finally{\n        await client.close()\n    }\n}\nexport async function LoginUserDB(documento:string,password:string){\n\n\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('usuarios')\n        const projection = {projection: {_id: 0, primer_nombre:1, segundo_nombre:1, primer_apellido:1, \n            segundo_apellido:1, correo:1, documento:1,eps:1,password:1}}\n            const res = await collection.findOne({documento:Number(documento)},projection)\n            console.log('resultado:', res);\n        if(!res) return null\n\n        const decrypted = await decrypt(res.password, process.env.PASSWORD_ENCRYPT_KEY || '')\n\n        console.log('decrypted:', decrypted);\n        if(decrypted !== password) return null\n\n        return res as unknown as PatientDataMongo\n        \n    }\n\n    catch(e){\n        console.log(e)\n        return null\n    }\n\n    finally{\n        await client.close()\n    }\n\n}\nexport async function getDocumentoByEmail(email:string){\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('usuarios')\n        const res = await collection.findOne({correo:email},{projection: {_id: 0, documento: 1}})\n\n        return res ? res.documento as Number : null\n    }\n\n    catch(e){\n        console.log(e)\n        return null\n    }\n\n    finally{\n        await client.close()\n    }\n}\nexport async function getMailByDocumento(documento:string){\n\n\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('usuarios')\n        const res = await collection.findOne({documento:Number(documento)},{projection: {_id: 0, correo: 1}})\n        return res ? res.correo as string : null\n    }\n\n    catch(e){\n        console.log(e)\n        return null\n    }\n\n    finally{\n        await client.close()\n    }\n\n}\nexport async function SetNewPassword(documento: string, password: string){\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('usuarios')\n\n        await collection.updateOne({documento: Number(documento)},{$set: {password: await encrypt(password, process.env.PASSWORD_ENCRYPT_KEY || '')}})\n\n        return true\n    }\n\n    catch(e){\n        console.log(e)\n        return false\n    }\n\n    finally{\n        await client.close()\n    }\n}\nexport async function getUserRegisterByMail(email:string){\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('usuarios')\n        const res = await collection.findOne({correo:email},{projection: {_id: 0,iat:0,password:0}})\n\n        return res ? res as unknown as PatientDataMongo : null\n    }\n\n    catch(e){\n        console.log(e)\n        return null\n    }\n\n    finally{\n        await client.close()\n    }\n}\nexport async function getUserRegisterByDocumento(documento:string){\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('usuarios')\n        const res = await collection.findOne({documento:Number(documento)},{projection: {_id: 0,iat:0,password:0}})\n\n        return res ? res as unknown as PatientDataMongo : null\n    }\n\n    catch(e){\n        console.log(e)\n        return null\n    }\n\n    finally{\n        await client.close()\n    }\n}\nexport async function setNewPasswordByDocumento(documento:string,password:string){\n    const client = new MongoClient(process.env.MONGO_URI || '')\n\n    try{\n        await client.connect()\n        const db = client.db('oficina_virtual')\n        const collection = db.collection('usuarios')\n\n        await collection.updateOne({documento:Number(documento)},{$set: {password: await encrypt(password, process.env.PASSWORD_ENCRYPT_KEY || '')}})\n\n        return true\n    }\n\n    catch(e){\n        console.log(e)\n        return false\n    }\n\n    finally{\n        await client.close()\n    }\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1090, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1095, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/constantes.ts"],"sourcesContent":["export const identificaciones = [\n    {\n        \"nombre_comun\": \"Cédula de Extranjería\",\n        \"alone\": 2,\n        \"nueva_eps\": 1,\n        \"aliansalud\": \"CE\",\n        \"foneca\": \"\"\n    },\n    {\n        \"nombre_comun\": \"Tarjeta de Identidad\",\n        \"alone\": 5,\n        \"nueva_eps\": 2,\n        \"aliansalud\": \"TI\",\n        \"foneca\": \"TI\"\n    },\n    {\n        \"nombre_comun\": \"Cédula de Ciudadanía\",\n        \"alone\": 1,\n        \"nueva_eps\": 3,\n        \"aliansalud\": \"CC\",\n        \"foneca\": \"CC\"\n    },\n    {\n        \"nombre_comun\": \"Registro Civil\",\n        \"alone\": 4,\n        \"nueva_eps\": 4,\n        \"aliansalud\": \"RC\",\n        \"foneca\": \"RC\"\n    },\n    {\n        \"nombre_comun\": \"Pasaporte\",\n        \"alone\": 3,\n        \"nueva_eps\": 5,\n        \"aliansalud\": \"PA\",\n        \"foneca\": \"\"\n    },\n    {\n        \"nombre_comun\": \"Menor Sin Identificación\",\n        \"alone\": 7,\n        \"nueva_eps\": 6,\n        \"aliansalud\": \"\",\n        \"foneca\": \"\"\n    },\n    {\n        \"nombre_comun\": \"Adulto Sin Identificación\",\n        \"alone\": 6,\n        \"nueva_eps\": 7,\n        \"aliansalud\": \"\",\n        \"foneca\": \"\"\n    },\n    {\n        \"nombre_comun\": \"Cédula Diplomática\",\n        \"alone\": 9,\n        \"nueva_eps\": 8,\n        \"aliansalud\": \"CD\",\n        \"foneca\": \"\"\n    },\n    {\n        \"nombre_comun\": \"Salvoconducto\",\n        \"alone\": 11,\n        \"nueva_eps\": 10,\n        \"aliansalud\": \"SC\",\n        \"foneca\": \"\"\n    },\n    {\n        \"nombre_comun\": \"Permiso Especial de Permanencia\",\n        \"alone\": 13,\n        \"nueva_eps\": 11,\n        \"aliansalud\": \"PE\",\n        \"foneca\": \"\"\n    },\n    {\n        \"nombre_comun\": \"Permiso Temporal de Permanencia\",\n        \"alone\": 14,\n        \"nueva_eps\": 12,\n        \"aliansalud\": \"PT\",\n        \"foneca\": \"\"\n    }\n];\n"],"names":[],"mappings":";;;AAAO,MAAM,mBAAmB;IAC5B;QACI,gBAAgB;QAChB,SAAS;QACT,aAAa;QACb,cAAc;QACd,UAAU;IACd;IACA;QACI,gBAAgB;QAChB,SAAS;QACT,aAAa;QACb,cAAc;QACd,UAAU;IACd;IACA;QACI,gBAAgB;QAChB,SAAS;QACT,aAAa;QACb,cAAc;QACd,UAAU;IACd;IACA;QACI,gBAAgB;QAChB,SAAS;QACT,aAAa;QACb,cAAc;QACd,UAAU;IACd;IACA;QACI,gBAAgB;QAChB,SAAS;QACT,aAAa;QACb,cAAc;QACd,UAAU;IACd;IACA;QACI,gBAAgB;QAChB,SAAS;QACT,aAAa;QACb,cAAc;QACd,UAAU;IACd;IACA;QACI,gBAAgB;QAChB,SAAS;QACT,aAAa;QACb,cAAc;QACd,UAAU;IACd;IACA;QACI,gBAAgB;QAChB,SAAS;QACT,aAAa;QACb,cAAc;QACd,UAAU;IACd;IACA;QACI,gBAAgB;QAChB,SAAS;QACT,aAAa;QACb,cAAc;QACd,UAAU;IACd;IACA;QACI,gBAAgB;QAChB,SAAS;QACT,aAAa;QACb,cAAc;QACd,UAAU;IACd;IACA;QACI,gBAAgB;QAChB,SAAS;QACT,aAAa;QACb,cAAc;QACd,UAAU;IACd;CACH"}},
    {"offset": {"line": 1177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1182, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/server/alone.ts [app-client] (ecmascript, action)"],"sourcesContent":["'use server'\nimport { format } from 'date-fns';\nimport { toZonedTime } from 'date-fns-tz';\nimport fs from 'fs';\nimport path from 'path';\nimport crypto from 'crypto';\nimport { getUserRegisterByDocumento, getUserRegisterByMail } from '@/utils/mongo';\nimport { identificaciones } from '@/constantes';\nimport { unifiedName } from '@/utils/helpers_client';\n\nexport async function GetAliansaludURL(documento:string){\n\n    const url = process.env.ALONE_URL_ALIANSALUD\n    const client_id = process.env.CLIENT_ID_ALIANSALUD\n\n    //buscamos al paciente\n\n    const patient = await getUserRegisterByDocumento(documento)\n\n    if(!patient) return null\n\n    \n\n    const tempDate = toZonedTime(new Date(), 'America/Bogota');\n    const time = format( tempDate , 'yyyyMMddHHmmss');\n\n    const rootPath = path.join(process.cwd(), 'alone_certs', 'Aliansalud.pem');\n\n    const cert = Buffer.from(fs.readFileSync(rootPath)).toString('utf-8');\n\n    const validTipoDocumento = identificaciones.find((val) => val.aliansalud === patient.tipo_documento)\n\n    const completeName = unifiedName(patient.primer_nombre, patient.segundo_nombre, patient.primer_apellido, patient.segundo_apellido)\n\n    const text = `${validTipoDocumento?.alone || 1}|${patient.documento}|${completeName}|${time}|${client_id}|${process.env.NEXTAUTH_URL}`;\n    \n    \n\n    const encryptedText =  crypto.publicEncrypt({\n        key: cert,\n        padding: crypto.constants.RSA_PKCS1_PADDING,\n        oaepHash: \"sha256\"\n    }, Buffer.from(text))\n\n    const urlEncoded = encodeURIComponent(encryptedText.toString('base64'))\n\n    const final_url = `${url}?key=${urlEncoded}`\n\n    return final_url\n\n}\n\n\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAUO,eAAe,iBAAiB,SAAgB;IAEnD,MAAM,MAAM,QAAQ,GAAG,CAAC,oBAAoB;IAC5C,MAAM,YAAY,QAAQ,GAAG,CAAC,oBAAoB;IAElD,sBAAsB;IAEtB,MAAM,UAAU,MAAM,CAAA,GAAA,qHAAA,CAAA,6BAA0B,AAAD,EAAE;IAEjD,IAAG,CAAC,SAAS,OAAO;IAIpB,MAAM,WAAW,CAAA,GAAA,wKAAA,CAAA,cAAW,AAAD,EAAE,IAAI,QAAQ;IACzC,MAAM,OAAO,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAG,UAAW;IAEhC,MAAM,WAAW,uCAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,eAAe;IAEzD,MAAM,OAAO,OAAO,IAAI,CAAC,qCAAA,CAAA,UAAE,CAAC,YAAY,CAAC,WAAW,QAAQ,CAAC;IAE7D,MAAM,qBAAqB,iHAAA,CAAA,mBAAgB,CAAC,IAAI,CAAC,CAAC,MAAQ,IAAI,UAAU,KAAK,QAAQ,cAAc;IAEnG,MAAM,eAAe,CAAA,GAAA,8HAAA,CAAA,cAAW,AAAD,EAAE,QAAQ,aAAa,EAAE,QAAQ,cAAc,EAAE,QAAQ,eAAe,EAAE,QAAQ,gBAAgB;IAEjI,MAAM,OAAO,CAAC,EAAE,oBAAoB,SAAS,EAAE,CAAC,EAAE,QAAQ,SAAS,CAAC,CAAC,EAAE,aAAa,CAAC,EAAE,KAAK,CAAC,EAAE,UAAU,CAAC,EAAE,QAAQ,GAAG,CAAC,YAAY,CAAC,CAAC;IAItI,MAAM,gBAAiB,yCAAA,CAAA,UAAM,CAAC,aAAa,CAAC;QACxC,KAAK;QACL,SAAS,yCAAA,CAAA,UAAM,CAAC,SAAS,CAAC,iBAAiB;QAC3C,UAAU;IACd,GAAG,OAAO,IAAI,CAAC;IAEf,MAAM,aAAa,mBAAmB,cAAc,QAAQ,CAAC;IAE7D,MAAM,YAAY,CAAC,EAAE,IAAI,KAAK,EAAE,WAAW,CAAC;IAE5C,OAAO;AAEX"}},
    {"offset": {"line": 1235, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1239, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/.next-internal/server/app/main/page/actions.js"],"sourcesContent":["__turbopack_export_value__({\n  '08f302e750b321d0925fa0bc9f4a0bc2d504a6c6': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['ValidateCodeDB'])(...args)),\n  '1c4ce6e1548761242e0fc4080406954d09629907': (...args) => Promise.resolve(require('ACTIONS_MODULE1')).then(mod => (0, mod['LoginUserDB'])(...args)),\n  '21b92e784e69cc96106fa221a2c2a85c93c744ee': (...args) => Promise.resolve(require('ACTIONS_MODULE1')).then(mod => (0, mod['getUserRegisterByMail'])(...args)),\n  '2a4aa52ec04bad5bd7a7d951faf47f9e2a98e0ab': (...args) => Promise.resolve(require('ACTIONS_MODULE1')).then(mod => (0, mod['getUserRegisterByDocumento'])(...args)),\n  '2cbbb32563e51c2c38c64e184eb290cc223b643d': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['ResetRandomPassword'])(...args)),\n  '3de689509e1bc4152490c760ec9cdbe27c91e2ac': (...args) => Promise.resolve(require('ACTIONS_MODULE1')).then(mod => (0, mod['GetTempCode'])(...args)),\n  '566cfe13a264b6db108566b467390905c0bf3a05': (...args) => Promise.resolve(require('ACTIONS_MODULE2')).then(mod => (0, mod['GetAliansaludURL'])(...args)),\n  '56a8884c72c058ad262e0bb322a3dbf3b422438b': (...args) => Promise.resolve(require('ACTIONS_MODULE1')).then(mod => (0, mod['setNewPasswordByDocumento'])(...args)),\n  '787acc2bd299c33697dbaa34943fc5c1db810b16': (...args) => Promise.resolve(require('ACTIONS_MODULE1')).then(mod => (0, mod['SetNewPassword'])(...args)),\n  '858904be9ee2459af8f4ab08246d2f8bc3b023c0': (...args) => Promise.resolve(require('ACTIONS_MODULE1')).then(mod => (0, mod['getMailExists'])(...args)),\n  '9ea85d00ae5d7c033b3cde1c1955b906c1b2cb29': (...args) => Promise.resolve(require('ACTIONS_MODULE1')).then(mod => (0, mod['getUserExists'])(...args)),\n  'b4332f6f58871d110c10aa9dc6088593a04593f3': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['ValidateCredentialsDB'])(...args)),\n  'bb3970afdd6be7ab38da4019fe6adad6cf155b6b': (...args) => Promise.resolve(require('ACTIONS_MODULE1')).then(mod => (0, mod['saveUserDB'])(...args)),\n  'c6242bc9cf3ceffcdae35466461d0eef73f1c745': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['GenerateAndSendCode'])(...args)),\n  'c7d345923671196f5950e89bd6745978b3cd83a1': (...args) => Promise.resolve(require('ACTIONS_MODULE1')).then(mod => (0, mod['getDocumentoByEmail'])(...args)),\n  'ccce0b7f68ddc897ec5092bc8257a234eb35766b': (...args) => Promise.resolve(require('ACTIONS_MODULE1')).then(mod => (0, mod['InsertTempCode'])(...args)),\n  'dc9d6386a27158e86c2b69f54bb698c2d0ae65f4': (...args) => Promise.resolve(require('ACTIONS_MODULE1')).then(mod => (0, mod['getMailByDocumento'])(...args)),\n});"],"names":[],"mappings":"AAAA,2BAA2B;IACzB,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,oGAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,iBAAiB,KAAK;IAC/I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mGAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,cAAc,KAAK;IAC5I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mGAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,wBAAwB,KAAK;IACtJ,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mGAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,6BAA6B,KAAK;IAC3J,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,oGAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,sBAAsB,KAAK;IACpJ,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mGAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,cAAc,KAAK;IAC5I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,oGAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,mBAAmB,KAAK;IACjJ,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mGAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,4BAA4B,KAAK;IAC1J,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mGAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,iBAAiB,KAAK;IAC/I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mGAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,gBAAgB,KAAK;IAC9I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mGAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,gBAAgB,KAAK;IAC9I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,oGAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,wBAAwB,KAAK;IACtJ,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mGAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,aAAa,KAAK;IAC3I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,oGAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,sBAAsB,KAAK;IACpJ,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mGAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,sBAAsB,KAAK;IACpJ,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mGAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,iBAAiB,KAAK;IAC/I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mGAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,qBAAqB,KAAK;AACrJ"}},
    {"offset": {"line": 1258, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}